dnl (c) Copyright IBM Corporation 2010:
dnl 
dnl This documentation is provided with source code (Trusted Platform
dnl Module (TPM) subject to the following license:
dnl 
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions are
dnl met:
dnl 
dnl Redistributions of source code must retain the above copyright notice,
dnl this list of conditions and the following disclaimer.
dnl 
dnl Redistributions in binary form must reproduce the above copyright
dnl notice, this list of conditions and the following disclaimer in the
dnl documentation and/or other materials provided with the distribution.
dnl 
dnl Neither the names of the IBM Corporation nor the names of its
dnl contributors may be used to endorse or promote products derived from
dnl this software without specific prior written permission.
dnl 
dnl THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
dnl "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
dnl LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
dnl A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
dnl HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
dnl SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
dnl LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
dnl DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
dnl THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
dnl (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
dnl OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

dnl $Id: configure.in 4073 2010-04-30 14:44:14Z kgoldman $

dnl Process this file with autoconf to produce a configure script.
AC_INIT(lib/bind.c)
AM_INIT_AUTOMAKE(libtpm, 2.0)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

AC_DEFINE(TPM_POSIX)
AC_DEFINE(TPM_NV_DISK)

dnl Checks for build features
AC_MSG_CHECKING(whether to build for CCA)
AC_ARG_ENABLE(cca,
[  --enable-cca            Build the library with CCA support (instead of socket)],
[ AC_DEFINE(XCRYPTO_USE_CCA)
  AC_MSG_RESULT(yes)

  AC_MSG_CHECKING(whether UDXTK_FS_ROOT has been set)
  if test "set$UDXTK_FS_ROOT" != "set"; then
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
    echo "You must set the environment variable UDXTK_FS_ROOT."
    exit
  fi
  AC_MSG_CHECKING(whether XCTK_FS_ROOT has been set)
  if test "set$XCTK_FS_ROOT" != "set"; then
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
    echo "You must set the environment variable XCTK_FS_ROOT."
    exit
  fi
  INCLUDES="-I${UDXTK_FS_ROOT}/inc -I${CROSS_PPC_HOME}/include -I../../cca-host-glue"
  UDXTK_LD_PATHS="-L${UDXTK_FS_ROOT}/lib/common -L${XCTK_FS_ROOT}/lib/host/linux/gcc/redhat" 
  UDXTK_LD_LIBS="-lcsulcall -lcsulsapi -lcsulsecy -lds30 -lxcryp -ldl"
  AC_DEFINE(HOST32BIT)
  AC_DEFINE(_LINUX_)
  AC_DEFINE(LINUX)
  AC_DEFINE(TPM_VTPM)
  vtpm=true
],
[ AC_DEFINE(X86)
  AC_MSG_RESULT(no) ])

AC_MSG_CHECKING(for the size of keys to support)
AC_ARG_WITH(size-keys,
  [  --with-size-keys=NUMBER
                            The maximum size of asymmetric keys supported
                            (default=4096).],
  [number_key_bits="$withval"],
  [number_key_bits="4096"])
AC_DEFINE_UNQUOTED(TPM_MAXIMUM_KEY_SIZE,${number_key_bits})
AC_MSG_RESULT($number_key_bits)

AC_MSG_CHECKING(whether to send messages to character device )
AC_ARG_ENABLE(chardev,
  [  --enable-chardev        To build for sending to character device.],
  AC_DEFINE(TPM_USE_CHARDEV)
  AC_DEFINE(TPM_VTPM)
  vtpm=true
  AC_MSG_RESULT(yes),
  AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to send messages via UnixIO socket )
AC_ARG_ENABLE(unixio,
  [  --enable-unixio         To build for sending via UnixIO socket.],
  AC_DEFINE(TPM_USE_UNIXIO)
  AC_MSG_RESULT(yes),
  AC_MSG_RESULT(no)
)



AC_MSG_CHECKING(whether to enable virtual TPM support)
AC_ARG_ENABLE(vtpm,
  [  --enable-vtpm           To enable virtual TPM support when using sockets.],
  AC_DEFINE(TPM_VTPM)
  vtpm=true
  AC_MSG_RESULT(yes),
  AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to use serial port)
AC_ARG_ENABLE(serial-port,
  [  --enable-serial-port    To enable communication via serial port.],
  AC_DEFINE(USE_SERIAL_PORT)
  AC_DEFINE(USE_PARTIAL_READ)
  AC_MSG_RESULT(yes),
  AC_MSG_RESULT(no)
)

#The following generates a non-fatal error when linking:
# gcc : -lc : linker input file unused because linking not done
#AC_MSG_CHECKING(whether to build statically linked executables)
#AC_ARG_ENABLE(staticexec,
#  [  --enable-staticexec    To build statically linked executables.],
#  STATIC_LINKING_FLAG="-static -lc"
#  AC_DEFINE(USE_STATIC_LINKING)
#  AC_MSG_RESULT(yes),
#  AC_MSG_RESULT(no)
#)


dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_CHECK_LIB([crypto],[HMAC_CTX_cleanup],[AC_DEFINE(HAVE_HMAC_CTX_CLEANUP)])

AC_DEFINE(TPM_V12)
AC_DEFINE(TPM_AES)
AC_DEFINE(TPM_USE_TAG_IN_STRUCTURE)

AM_CONDITIONAL(VTPM_TOOLS, test x$vtpm = xtrue)

AC_SUBST(VTPM_TOOLS)
AC_SUBST(UDXTK_LD_PATHS)
AC_SUBST(UDXTK_LD_LIBS)
AC_SUBST(STATIC_LINKING_FLAG)
AC_SUBST(INCLUDES)
AC_SUBST(TPM_MAXIMUM_KEY_SIZE)
AC_OUTPUT(Makefile lib/Makefile utils/Makefile)
